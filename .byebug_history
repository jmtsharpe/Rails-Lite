c
match_data
exit
c
match(req).run
match(req)
exit
route.run(req, res)
route = match(req)
match(req)
match
c
req.path
req
match(req)
c
n
exit
req.path
c
match_data.class
c
n
c
nc
n
controller_class
controller
match_data.names
req.path
c
http_method
pattern.class
pattern
patten.names
match_data.names
match_data
c
n
nn
n
res
req
params
controller_class.new
controller = controller_class.new(req, res)
controller = controller_class.new(req, res
controller = controller_class.new(req, res)
controller
c
n
controller_class
c
n
req.path
req
self.match(req)
c
self.match(req)
c
n
self.match(req)
req
c
n
req.path
self.match(req)
self.match
c
match(req)
match
c
controller_class
res
req
c
ref.status
ref.status = 404
ref
ref = res
res.status
res
c
route.pattern.match(req.path)c
route.pattern.match(req.path)
route.pattern.match?(req.path)
route.patter.match?(req.path)
route.pattern
route
c
nc
n
c
action_name
pattern
c
pattern =~ req.path && http_method == req.request_method.downcase.to_sym
c
controller_class
c
matches?(req)
c
req.request_method.downcase.to_sym
req.request_method.to_sym
req.request_method
http_method
pattern =~ req.path
pattern
c
pattern
JSON.parse(pattern.to_s)
pattern.to_s
pattern
JSON.parse(pattern)
c
pattern
c
req.request_method
http_method
req.path
pattern
patten
c
req.request_method
req.all
req.name
req.action_name
req.action
req.method
c
req.methods
req.action
req.path
req.env
@env
req
c
req
rew
c
req
c
n
req
c
"_rails_lite_app"
@session.to_json
@session
c
session["test_key2"]
session["test_key2"]= "test_value2"
session["test_key"]
session
c
@session
@sesssion
@session[]
@session[key]
@session[key] = val
@session[key]
key
@session
c
n
@session[key]
@session[key]= val.to_json
@session[key] = val.to_json
@session[key] = val
@session
val
key
c
res
res.set_cookie("_rails_lite_app", @session.to_json)
res.cookies
new_res
new_res.set_cookie("session", @session.to_json)
res.set_cookie("session", @session.to_json)
("session", @session.to_json)
res.set_cookie("/session", @session.to_json)
new_res = res
res.set_cookie
res.set_cookies
res.set_cookes
res.cookies
res
c
n
c
n
c
cookie
session.cookie
c
n
req.cookies
c
n
req.cookies
c
@session["pho"]
@session
n
c
n
session
@session["xyz"]
session["xyz"]
n
session
n
session
c
req.cookies["_rails_lite_app"]
c
ivar
req.cookies
c
JSON.parse(req.env["rack.request.cookie_hash"]["_rails_lite_app"])
 req.env["rack.request.cookie_hash"]["_rails_lite_app"]
JSON.parse(req.env["rack.request.cookie_hash"])
req.env["rack.request.cookie_hash"]
req.env
req.env[rack.request.cookie_hash]
req.session
session.cookie_hash
rack.request.cookie_has
req.cookie_hash
req.session
req
c
_rails_lite_app
req._rails_lite_app
req[_rails_lite_app]
c
n
path
n
c
n
c
n
c
n
c
n
c
n
path
n
c
nc
n
content
conent
n
